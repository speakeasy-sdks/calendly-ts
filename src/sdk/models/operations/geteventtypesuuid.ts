/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetEventTypesUuidRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=uuid",
  })
  uuid: string;
}

export class GetEventTypesUuidErrorResponseDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;
}

/**
 * Error Object
 */
export class GetEventTypesUuidErrorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetEventTypesUuidErrorResponseDetails })
  @Expose({ name: "details" })
  @Type(() => GetEventTypesUuidErrorResponseDetails)
  details?: GetEventTypesUuidErrorResponseDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}

/**
 * OK
 */
export class GetEventTypesUuid200ApplicationJSON extends SpeakeasyBase {
  /**
   * A configuration for an Event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  @Type(() => shared.EventType)
  resource: shared.EventType;
}

export class GetEventTypesUuidResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request is not valid
   */
  @SpeakeasyMetadata()
  errorResponse?: GetEventTypesUuidErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getEventTypesUuid200ApplicationJSONObject?: GetEventTypesUuid200ApplicationJSON;
}
