/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum PostUsersUuidWebhooksRequestBodyEventsEnum {
  InviteeCanceled = "invitee.canceled",
  InviteeCreated = "invitee.created",
  RoutingFormSubmissionCreated = "routing_form_submission.created",
}

/**
 * Indicates if the webhook subscription scope will be "organization" or "user"
 */
export enum PostUsersUuidWebhooksRequestBodyScopeEnum {
  Organization = "organization",
  User = "user",
}

export class PostUsersUuidWebhooksRequestBody extends SpeakeasyBase {
  /**
   * List of user events to subscribe to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events: PostUsersUuidWebhooksRequestBodyEventsEnum[];

  /**
   * The unique reference to the organization that the webhook will be tied to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization: string;

  /**
   * Indicates if the webhook subscription scope will be "organization" or "user"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope: PostUsersUuidWebhooksRequestBodyScopeEnum;

  /**
   * Optional secret key shared between your application and Calendly. See https://developer.calendly.com/api-docs/ZG9jOjM2MzE2MDM4-webhook-signatures for additional information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "signing_key" })
  signingKey?: string;

  /**
   * The URL where you want to receive POST requests for events you are subscribed to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * The unique reference to the user that the webhook will be tied to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}

export enum PostUsersUuidWebhooks403ApplicationJSONMessageEnum {
  PleaseUpgradeYourCalendlyAccountToProfessional = "Please upgrade your Calendly account to Professional",
  YouDoNotHavePermissionToAccessThisResource = "You do not have permission to access this resource.",
  YouDoNotHavePermission = "You do not have permission",
}

export enum PostUsersUuidWebhooks403ApplicationJSONTitleEnum {
  PermissionDenied = "Permission Denied",
}

/**
 * Permission Denied
 */
export class PostUsersUuidWebhooks403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: PostUsersUuidWebhooks403ApplicationJSONMessageEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: PostUsersUuidWebhooks403ApplicationJSONTitleEnum;
}

export class PostUsersUuidWebhooksErrorResponseDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;
}

/**
 * Error Object
 */
export class PostUsersUuidWebhooksErrorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PostUsersUuidWebhooksErrorResponseDetails })
  @Expose({ name: "details" })
  @Type(() => PostUsersUuidWebhooksErrorResponseDetails)
  details?: PostUsersUuidWebhooksErrorResponseDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}

/**
 * Created
 */
export class PostUsersUuidWebhooks201ApplicationJSON extends SpeakeasyBase {
  /**
   * Webhook Subscription Object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  @Type(() => shared.WebhookSubscription)
  resource: shared.WebhookSubscription;
}

export class PostUsersUuidWebhooksResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request is not valid
   */
  @SpeakeasyMetadata()
  errorResponse?: PostUsersUuidWebhooksErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  postUsersUuidWebhooks201ApplicationJSONObject?: PostUsersUuidWebhooks201ApplicationJSON;

  /**
   * Permission Denied
   */
  @SpeakeasyMetadata()
  postUsersUuidWebhooks403ApplicationJSONObject?: PostUsersUuidWebhooks403ApplicationJSON;
}
