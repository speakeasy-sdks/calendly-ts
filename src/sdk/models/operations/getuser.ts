/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetUserRequest extends SpeakeasyBase {
  /**
   * User unique identifier, or the constant "me" to reference the caller
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=uuid",
  })
  uuid: string;
}

export class GetUserErrorResponseDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;
}

/**
 * Error Object
 */
export class GetUserErrorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetUserErrorResponseDetails })
  @Expose({ name: "details" })
  @Type(() => GetUserErrorResponseDetails)
  details?: GetUserErrorResponseDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}

/**
 * Service response
 */
export class GetUser200ApplicationJSON extends SpeakeasyBase {
  /**
   * Information about the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  @Type(() => shared.User)
  resource: shared.User;
}

export class GetUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Cannot authenticate caller
   */
  @SpeakeasyMetadata()
  errorResponse?: GetUserErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getUser200ApplicationJSONObject?: GetUser200ApplicationJSON;
}
