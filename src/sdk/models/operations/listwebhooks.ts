/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Filter the list by organization or user
 */
export enum ListWebhooksScopeEnum {
  Organization = "organization",
  User = "user",
}

export class ListWebhooksRequest extends SpeakeasyBase {
  /**
   * The number of rows to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: number;

  /**
   * Indicates if the results should be filtered by organization
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=organization",
  })
  organization: string;

  /**
   * The token to pass to get the next or previous portion of the collection
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_token",
  })
  pageToken?: string;

  /**
   * Filter the list by organization or user
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=scope" })
  scope: ListWebhooksScopeEnum;

  /**
   * Order results by the specified field and direction. Accepts comma-separated list of {field}:{direction} values.
   *
   * @remarks
   * Supported fields are: created_at.
   * Sort direction is specified as: asc, desc.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * Indicates if the results should be filtered by user. This parameter is only required if the `scope` parameter is set to `user`.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=user" })
  user?: string;
}

export enum ListWebhooks403ApplicationJSONMessageEnum {
  YouDoNotHavePermission = "You do not have permission",
  YouDoNotHavePermissionToAccessThisResource = "You do not have permission to access this resource.",
  Unauthorized = "Unauthorized",
}

export enum ListWebhooks403ApplicationJSONTitleEnum {
  PermissionDenied = "Permission Denied",
}

/**
 * Permission Denied
 */
export class ListWebhooks403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: ListWebhooks403ApplicationJSONMessageEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: ListWebhooks403ApplicationJSONTitleEnum;
}

export class ListWebhooksErrorResponseDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;
}

/**
 * Error Object
 */
export class ListWebhooksErrorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListWebhooksErrorResponseDetails })
  @Expose({ name: "details" })
  @Type(() => ListWebhooksErrorResponseDetails)
  details?: ListWebhooksErrorResponseDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}

/**
 * OK
 */
export class ListWebhooks200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.WebhookSubscription })
  @Expose({ name: "collection" })
  @Type(() => shared.WebhookSubscription)
  collection: shared.WebhookSubscription[];

  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => shared.Pagination)
  pagination: shared.Pagination;
}

export class ListWebhooksResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request is not valid
   */
  @SpeakeasyMetadata()
  errorResponse?: ListWebhooksErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listWebhooks200ApplicationJSONObject?: ListWebhooks200ApplicationJSON;

  /**
   * Permission Denied
   */
  @SpeakeasyMetadata()
  listWebhooks403ApplicationJSONObject?: ListWebhooks403ApplicationJSON;
}
