/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export enum ListActivityLogSortEnum {
  ActionAsc = "action:asc",
  ActionDesc = "action:desc",
  ActorDisplayNameAsc = "actor.display_name:asc",
  ActorDisplayNameDesc = "actor.display_name:desc",
  ActorUriAsc = "actor.uri:asc",
  ActorUriDesc = "actor.uri:desc",
  NamespaceAsc = "namespace:asc",
  NamespaceDesc = "namespace:desc",
  OccurredAtAsc = "occurred_at:asc",
  OccurredAtDesc = "occurred_at:desc",
}

export class ListActivityLogRequest extends SpeakeasyBase {
  /**
   * The action(s) associated with the entries
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=action",
  })
  action?: string[];

  /**
   * Return entries from the user(s) associated with the provided URIs
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=actor",
  })
  actor?: string[];

  /**
   * The number of rows to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: number;

  /**
   * Include entries that occurred prior to this time (sample time format: "2020-01-02T03:04:05.678Z"). This time should use the UTC timezone.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_occurred_at",
  })
  maxOccurredAt?: Date;

  /**
   * Include entries that occurred after this time (sample time format: "2020-01-02T03:04:05.678Z"). This time should use the UTC timezone.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_occurred_at",
  })
  minOccurredAt?: Date;

  /**
   * The categories of the entries
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=namespace",
  })
  namespace?: string[];

  /**
   * Return activity log entries from the organization associated with this URI
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=organization",
  })
  organization: string;

  /**
   * The token to pass to get the next portion of the collection
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_token",
  })
  pageToken?: string;

  /**
   * Filters entries based on the search term.
   *
   * @remarks
   *
   * Supported operators:
   *   - `|` - to allow filtering by one term or another. Example: `this | that`
   *   - `+` - to allow filtering by one term and another. Example: `this + that`
   *   - `"` - to allow filtering by an exact search term. Example: `"email@website.com"`
   *   - `-` - to omit specific terms from results. Example: `Added -User`
   *   - `()` - to allow specifying precedence during a search. Example: `(this + that) OR (person + place)`
   *   - `*` - to allow prefix searching. Example `*@other-website.com`
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search_term",
  })
  searchTerm?: string;

  /**
   * Order results by the specified field and direction. List of {field}:{direction} values.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=sort" })
  sort?: ListActivityLogSortEnum[];
}

export enum ListActivityLog403ApplicationJSONMessageEnum {
  PleaseUpgradeYourCalendlyAccountToEnterprise = "Please upgrade your Calendly account to Enterprise.",
  YouDoNotHavePermissionToAccessThisResource = "You do not have permission to access this resource.",
}

export enum ListActivityLog403ApplicationJSONTitleEnum {
  PermissionDenied = "Permission Denied",
}

/**
 * Permission Denied
 */
export class ListActivityLog403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: ListActivityLog403ApplicationJSONMessageEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: ListActivityLog403ApplicationJSONTitleEnum;
}

export class ListActivityLogErrorResponseDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;
}

/**
 * Error Object
 */
export class ListActivityLogErrorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListActivityLogErrorResponseDetails })
  @Expose({ name: "details" })
  @Type(() => ListActivityLogErrorResponseDetails)
  details?: ListActivityLogErrorResponseDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}

/**
 * Activity log response
 */
export class ListActivityLog200ApplicationJSON extends SpeakeasyBase {
  /**
   * The set of activity log entries matching the criteria
   */
  @SpeakeasyMetadata({ elemType: shared.Entry })
  @Expose({ name: "collection" })
  @Type(() => shared.Entry)
  collection: shared.Entry[];

  /**
   * If there are more search results than the total_count field indicates, pagination will continue to return results past the total_count field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exceeds_max_total_count" })
  exceedsMaxTotalCount: boolean;

  /**
   * The date and time of the newest entry (format: "2020-01-02T03:04:05.678Z") in the collection array.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_event_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastEventTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => shared.Pagination)
  pagination: shared.Pagination;

  /**
   * Total number of records based on search criteria
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_count" })
  totalCount: number;
}

export class ListActivityLogResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request is not valid
   */
  @SpeakeasyMetadata()
  errorResponse?: ListActivityLogErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listActivityLog200ApplicationJSONObject?: ListActivityLog200ApplicationJSON;

  /**
   * Permission Denied
   */
  @SpeakeasyMetadata()
  listActivityLog403ApplicationJSONObject?: ListActivityLog403ApplicationJSON;
}
