/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Indicates if the results should be filtered by status  ("pending", "accepted", or "declined")
 */
export enum GetOrganizationsUuidInvitationsStatusEnum {
  Pending = "pending",
  Accepted = "accepted",
  Declined = "declined",
}

export class GetOrganizationsUuidInvitationsRequest extends SpeakeasyBase {
  /**
   * The number of rows to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: number;

  /**
   * Indicates if the results should be filtered by email address
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email?: string;

  /**
   * The token to pass to get the next or previous portion of the collection
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_token",
  })
  pageToken?: string;

  /**
   * Order results by the field name and direction specified (ascending or descending). Returns multiple sets of results in a comma-separated list.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * Indicates if the results should be filtered by status  ("pending", "accepted", or "declined")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: GetOrganizationsUuidInvitationsStatusEnum;

  /**
   * The organization's unique identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=uuid",
  })
  uuid: string;
}

export class GetOrganizationsUuidInvitationsErrorResponseDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;
}

/**
 * Error Object
 */
export class GetOrganizationsUuidInvitationsErrorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetOrganizationsUuidInvitationsErrorResponseDetails,
  })
  @Expose({ name: "details" })
  @Type(() => GetOrganizationsUuidInvitationsErrorResponseDetails)
  details?: GetOrganizationsUuidInvitationsErrorResponseDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}

/**
 * OK
 */
export class GetOrganizationsUuidInvitations200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.OrganizationInvitation })
  @Expose({ name: "collection" })
  @Type(() => shared.OrganizationInvitation)
  collection: shared.OrganizationInvitation[];

  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => shared.Pagination)
  pagination: shared.Pagination;
}

export class GetOrganizationsUuidInvitationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request is not valid
   */
  @SpeakeasyMetadata()
  errorResponse?: GetOrganizationsUuidInvitationsErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getOrganizationsUuidInvitations200ApplicationJSONObject?: GetOrganizationsUuidInvitations200ApplicationJSON;
}
