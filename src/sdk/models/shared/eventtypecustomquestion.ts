/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of response that the invitee provides to the custom question; can be one or multiple lines of text, a phone number, or single- or multiple-select.
 */
export enum EventTypeCustomQuestionTypeEnum {
  String = "string",
  Text = "text",
  PhoneNumber = "phone_number",
  SingleSelect = "single_select",
  MultiSelect = "multi_select",
}

export class EventTypeCustomQuestion extends SpeakeasyBase {
  /**
   * The invitee’s option(s) for single_select or multi_select type of responses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answer_choices" })
  answerChoices: string[];

  /**
   * true if the question created by the host is turned ON and visible on the event booking page; false if turned OFF and invisible on the event booking page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  /**
   * true if the custom question lets invitees record a written response in addition to single-select or multiple-select type of responses; false if it doesn’t.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "include_other" })
  includeOther: boolean;

  /**
   * The custom question that the host created for the event type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The numerical position of the question on the event booking page after the name and email address fields.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position: number;

  /**
   * true if a response to the question created by the host is required for invitees to book the event type; false if not required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required: boolean;

  /**
   * The type of response that the invitee provides to the custom question; can be one or multiple lines of text, a phone number, or single- or multiple-select.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: EventTypeCustomQuestionTypeEnum;
}
