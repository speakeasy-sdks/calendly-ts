/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Indicates if the profile belongs to a "user" (individual) or "team"
 */
export enum ProfileTypeEnum {
  User = "User",
  Team = "Team",
}

/**
 * The publicly visible profile of a User or a Team that's associated with the Event Type (note: some Event Types don't have profiles)
 */
export class Profile extends SpeakeasyBase {
  /**
   * Human-readable name for the profile of the user that's associated with the event type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The unique reference to the user associated with the profile
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner: string;

  /**
   * Indicates if the profile belongs to a "user" (individual) or "team"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ProfileTypeEnum;
}
