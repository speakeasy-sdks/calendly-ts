/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Question } from "./question";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Indicates if the form is in "draft" or "published" status.
 */
export enum RoutingFormStatusEnum {
  Draft = "draft",
  Published = "published",
}

/**
 * Information about a routing form.
 */
export class RoutingForm extends SpeakeasyBase {
  /**
   * The moment the routing form was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The routing form name (in human-readable format).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The URI of the organization that's associated with the routing form.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization: string;

  /**
   * An ordered collection of Routing Form non-deleted questions.
   */
  @SpeakeasyMetadata({ elemType: Question })
  @Expose({ name: "questions" })
  @Type(() => Question)
  questions: Question[];

  /**
   * Indicates if the form is in "draft" or "published" status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RoutingFormStatusEnum;

  /**
   * The moment when the routing form was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * Canonical reference (unique identifier) for the routing form.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}
