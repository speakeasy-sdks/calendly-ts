/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The conference metadata supplied by GoToMeeting
 */
export class GotoMeetingConferenceData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "conferenceCallInfo" })
  conferenceCallInfo?: string;

  /**
   * Canonical reference (unique identifier) for the GoToMeeting conference
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uniqueMeetingId" })
  uniqueMeetingId?: number;
}

/**
 * Indicates the current status of the GoToMeeting conference
 */
export enum GotoMeetingConferenceStatusEnum {
  Initiated = "initiated",
  Processing = "processing",
  Pushed = "pushed",
  Failed = "failed",
}

/**
 * The event location is a GoToMeeting conference
 */
export enum GotoMeetingConferenceTypeEnum {
  Gotomeeting = "gotomeeting",
}

/**
 * Details about an Event that will take place using a GotoMeeting conference
 */
export class GotoMeetingConference extends SpeakeasyBase {
  /**
   * The conference metadata supplied by GoToMeeting
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => GotoMeetingConferenceData)
  data: GotoMeetingConferenceData;

  /**
   * GoToMeeting conference meeting url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "join_url" })
  joinUrl: string;

  /**
   * Indicates the current status of the GoToMeeting conference
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: GotoMeetingConferenceStatusEnum;

  /**
   * The event location is a GoToMeeting conference
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GotoMeetingConferenceTypeEnum;
}
