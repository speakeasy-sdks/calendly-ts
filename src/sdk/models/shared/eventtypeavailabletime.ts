/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * An available meeting time slot for the given event type
 */
export class EventTypeAvailableTime extends SpeakeasyBase {
  /**
   * Total remaining invitees for this available time. For Group Event Type, more than one invitee can book in this available time. For all other Event Types, only one invitee can book in this available time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invitees_remaining" })
  inviteesRemaining: number;

  /**
   * The URL of the userâ€™s scheduling site where invitees book this event type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduling_url" })
  schedulingUrl: string;

  /**
   * The moment the event was scheduled to start in UTC time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;

  /**
   * Indicates that the open time slot is "available"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;
}
