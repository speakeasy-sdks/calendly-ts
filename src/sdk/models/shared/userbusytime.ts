/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class UserBusyTimeEvent extends SpeakeasyBase {
  /**
   * The uri associated with the calendly scheduled event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * Indicates whether the scheduled event is internal or external
 */
export enum UserBusyTimeTypeEnum {
  Calendly = "calendly",
  External = "external",
}

/**
 * An internal or external scheduled event for a given user
 */
export class UserBusyTime extends SpeakeasyBase {
  /**
   * The end time of the calendly event, as calculated by any "after" buffer set by the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buffered_end_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  bufferedEndTime?: Date;

  /**
   * The start time of the calendly event, as calculated by any "before" buffer set by the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buffered_start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  bufferedStartTime?: Date;

  /**
   * The end time of the scheduled event in UTC time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  @Type(() => UserBusyTimeEvent)
  event?: UserBusyTimeEvent;

  /**
   * The start time of the scheduled event in UTC time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;

  /**
   * Indicates whether the scheduled event is internal or external
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: UserBusyTimeTypeEnum;
}
