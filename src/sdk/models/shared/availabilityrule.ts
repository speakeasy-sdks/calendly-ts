/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class AvailabilityRuleIntervals extends SpeakeasyBase {
  /**
   * Format: `"hh:mm"`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * Format: `"hh:mm"`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;
}

/**
 * The type of this Availability Rule; can be "wday" or a specific "date".
 */
export enum AvailabilityRuleTypeEnum {
  Wday = "wday",
  Date = "date",
}

/**
 * The day of the week for which this Rule should be applied to.
 */
export enum AvailabilityRuleWdayEnum {
  Sunday = "sunday",
  Monday = "monday",
  Tuesday = "tuesday",
  Wednesday = "wednesday",
  Thursday = "thursday",
  Friday = "friday",
  Saturday = "saturday",
}

/**
 * The rules for an availability schedule.
 */
export class AvailabilityRule extends SpeakeasyBase {
  /**
   * A specific date in the future that this should be applied to (i.e. "2030-12-31").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date?: string;

  /**
   * The intervals to be applied to this Rule. Each interval represents when booking a meeting is allowed. If the interval array is empty, then there is no booking availability for that day. Time is in 24h format (i.e. "17:30") and local to the timezone in the Availability Schedule.
   */
  @SpeakeasyMetadata({ elemType: AvailabilityRuleIntervals })
  @Expose({ name: "intervals" })
  @Type(() => AvailabilityRuleIntervals)
  intervals: AvailabilityRuleIntervals[];

  /**
   * The type of this Availability Rule; can be "wday" or a specific "date".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AvailabilityRuleTypeEnum;

  /**
   * The day of the week for which this Rule should be applied to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wday" })
  wday?: AvailabilityRuleWdayEnum;
}
