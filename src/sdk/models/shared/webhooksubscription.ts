/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum WebhookSubscriptionEventsEnum {
  InviteeCreated = "invitee.created",
  InviteeCanceled = "invitee.canceled",
  RoutingFormSubmissionCreated = "routing_form_submission.created",
}

/**
 * The scope of the webhook subscription
 */
export enum WebhookSubscriptionScopeEnum {
  User = "user",
  Organization = "organization",
}

/**
 * Indicates if the webhook subscription is "active" or "disabled"
 */
export enum WebhookSubscriptionStateEnum {
  Active = "active",
  Disabled = "disabled",
}

/**
 * Webhook Subscription Object
 */
export class WebhookSubscription extends SpeakeasyBase {
  /**
   * The callback URL to use when the event is triggered
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callback_url" })
  callbackUrl: string;

  /**
   * The moment when the webhook subscription was created (e.g. "2020-01-02T03:04:05.678123Z")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The URI of the user who created the webhook subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  creator: string;

  /**
   * A list of events to which the webhook is subscribed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events: WebhookSubscriptionEventsEnum[];

  /**
   * The URI of the organization that's associated with the webhook subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization: string;

  /**
   * The date and time the webhook subscription is retried
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retry_started_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  retryStartedAt: Date;

  /**
   * The scope of the webhook subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope: WebhookSubscriptionScopeEnum;

  /**
   * Indicates if the webhook subscription is "active" or "disabled"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: WebhookSubscriptionStateEnum;

  /**
   * The moment when the webhook subscription was last updated (e.g. "2020-01-02T03:04:05.678123Z")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * Canonical reference (unique identifier) for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;

  /**
   * The URI of the user that's associated with the webhook subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user: string;
}
